// some copy-paste from prev. day
token_size: int;
line_size: int;
n: int;
arr: *int;
arr2: *int;
buf: char[100];
token: char[100];
EOF: char;

readline_buf: () -> bool = {
    line_size = 0;
    c: char;

    while (true) {
        c = readchar();

        if (c == EOF) {
            return true;
        }

        buf[line_size] = c;
        line_size += 1;

        if (c == '\n') {
            break;
        }
    }
    return false;
}


tokentoll : () -> int = {
    i := 0;
    ret := 0;

    while (i < token_size) {
        ret *= 10;

        dig := cast(int, token[i] - '0');
        ret += dig;
        i += 1;
    }

    return ret;
}

tokenize_buf: () -> void = {
    token_size = 0;
    i := 0;
    n = 0;

    while (i < line_size) {
        if (buf[i] == EOF || buf[i] == '\n') { break; }

        j := i;

        while (true) {
            token[j-i] = buf[j];

            if ( buf[j] == ' '
              || buf[j] == '\n'
              || buf[j] == EOF) { break; }

            j += 1;
        }

        token_size = j - i;
        arr[n] = tokentoll();

        i = j;

        while (buf[i] == ' ') {
            i += 1;
        }
        n += 1;
    }
}

is_arr_good: (a: *int, n: int) -> bool = {
    all_inc := 1;
    all_dec := 1;

    i := 1;
    while (i < n) {
        if (a[i] >= a[i-1]) {
            all_dec = 0;

            if (a[i] - a[i-1] > 3) {
                all_inc = 0;
            }
        }

        if (a[i] <= a[i-1]) {
            all_inc = 0;

            if (a[i-1] - a[i] > 3) {
                all_dec = 0;
            }
        }
        i += 1;
    }

    return all_inc + all_dec == 1;
}

is_modifiably_good: () -> bool = {
    rem_idx := 0;
    while (rem_idx < n) {
        i := 0;
        ptr := 0;
        while (i < n) {
            if (i == rem_idx) {
                i += 1;
                continue;
            }
            arr2[ptr] = arr[i];
            i += 1;
            ptr += 1;
        }

        if (is_arr_good(arr2, n - 1)) {
            return true;
        }

        rem_idx += 1;
    }
    return false;
}

main: () -> void = {
    EOF = cast(char, 255);
    ans := 0;
    arr = alloc(int, 100);
    arr2 = alloc(int, 100);

    while (true) {
        if (readline_buf()) {
            break;
        }

        if (line_size == 0) {
            break;
        }

        tokenize_buf();

        if (is_arr_good(arr, n) || is_modifiably_good()) {
            ans += 1;
        }
    }
    println(ans);

    delete(arr);
    delete(arr2);
}
