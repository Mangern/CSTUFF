[
    {
        "file": "hello.lang",
        "expect-stdout": "Hello world!\n"
    },
    {
        "file": "simple-var.lang",
        "expect-stdout": "69\n"
    },
    {
        "file": "simple-if.lang",
        "expect-stdout": "69\n"
    },
    {
        "file": "simple-while.lang",
        "expect-stdout": "55\n"
    },
    {
        "file": "simple-func.lang",
        "expect-stdout": "69\n1\n"
    },
    {
        "file": "scope.lang",
        "expect-stdout": "3\n2\n1\n"
    },
    {
        "file": "operators.lang",
        "expect-stdout": "1 + 2 = 3\n1 - 2 = -1\n3 * 2 = 6\n10 / 5 = 2\n7 % 3 = 1\n1 > 1 = 0\n1 > 0 = 1\n1 >= 1 = 1\n1 < 0 = 0\n0 < 1 = 1\n1 < 1 = 0\n1 <= 1 = 1\n" 
    },
    {
        "file": "geqleq.lang",
        "expect-stdout": "1 2 3 4 5 6 7 8 9 10 \n10 9 8 7 6 5 4 3 2 1 \n"
    },
    {
        "file": "opassign.lang",
        "expect-stdout": "1\n"
    },
    {
        "file": "arr.lang",
        "expect-stdout": "0 1 2 3 4\n"
    },
    {
        "file": "real.lang",
        "expect-stdout": "420.000000\n1 2 3 69.000000\n69.000000\n3.141593\n"
    },
    {
        "file": "many-args.lang",
        "expect-stdout": "55\n55\n"
    },
    {
        "file": "sorting.lang",
        "expect-stdout": "2841809\n"
    },
    {
        "file": "sieve.lang",
        "expect-stdout": "Generated 25 primes\nSmallest prime: 2\nLargest prime: 97\n"
    },
    {
        "file": "break.lang",
        "expect-stdout": "0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n1 5\n2 5\n3 5\n4 5\n5 5\n"

    },
    {
        "file": "rec.lang",
        "expect-stdout": "89\n"
    },
    {
        "file": "euler3.lang",
        "expect-stdout": "6857\n"
    },
    {
        "file": "infer.lang",
        "expect-stdout": "69\n"
    },
    {
        "file": "stack-arr.lang",
        "expect-stdout": "69\n0 8 16 24 32 40\n"
    },


    {
        "file": "cast.lang",
        "expect-stderr": "Cannot assign out of type real to expression of type int\n"
    },
    {
        "file": "call-type.lang",
        "expect-stderr": "Argument 1 of function func has the wrong type. Required: 'int', Got: 'real'\n"
    },
    {
        "file": "err.lang",
        "expect-stderr": "./test/files/err.lang:2:14: Error: Unknown reference 'nothing'\n    2 |     x: int = nothing + foo;\n      |              ^~~~~~~\n"

    }
]
